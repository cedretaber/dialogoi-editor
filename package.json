{
  "name": "dialogoi-editor",
  "displayName": "Dialogoi Editor",
  "description": "小説執筆支援ツール - 設定・キャラクター・用語集・伏線を統合管理",
  "version": "1.0.1",
  "publisher": "dialogoi",
  "type": "module",
  "engines": {
    "vscode": "^1.102.0",
    "node": ">=22.0.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "小説",
    "執筆",
    "novel",
    "writing",
    "japanese"
  ],
  "main": "./out/extension.js",
  "activationEvents": [
    "onStartupFinished",
    "workspaceContains:**/dialogoi.yaml"
  ],
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "dialogoi-details",
          "title": "Dialogoi 詳細",
          "icon": "media/dialogoi-icon.svg"
        }
      ]
    },
    "views": {
      "dialogoi-details": [
        {
          "id": "dialogoi-explorer",
          "name": "ファイルツリー",
          "icon": "$(book)"
        },
        {
          "type": "webview",
          "id": "dialogoi-file-details",
          "name": "ファイル詳細",
          "when": "dialogoi:hasNovelProject",
          "icon": "$(info)"
        },
        {
          "type": "webview",
          "id": "dialogoi-comments",
          "name": "コメント・TODO",
          "when": "dialogoi:hasNovelProject",
          "icon": "$(comment-discussion)"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "dialogoi-explorer",
        "contents": "Dialogoi小説プロジェクトが見つかりません。\n新しい小説プロジェクトを作成して執筆を開始しましょう。\n[新しい小説を開始](command:dialogoi.startNewNovel)\n詳細については [ドキュメント](https://github.com/cedretaber/dialogoi-editor) をご覧ください。",
        "when": "!dialogoi:hasNovelProject"
      }
    ],
    "commands": [
      {
        "command": "dialogoi.refreshExplorer",
        "title": "更新",
        "icon": "$(refresh)"
      },
      {
        "command": "dialogoi.createFile",
        "title": "ファイル作成",
        "icon": "$(add)"
      },
      {
        "command": "dialogoi.createFileInDirectory",
        "title": "ここにファイル作成",
        "icon": "$(add)"
      },
      {
        "command": "dialogoi.deleteFile",
        "title": "削除",
        "icon": "$(trash)"
      },
      {
        "command": "dialogoi.renameFile",
        "title": "名前変更",
        "icon": "$(edit)"
      },
      {
        "command": "dialogoi.addTag",
        "title": "タグを追加",
        "icon": "$(tag)"
      },
      {
        "command": "dialogoi.removeTag",
        "title": "タグを削除",
        "icon": "$(close)"
      },
      {
        "command": "dialogoi.editTags",
        "title": "タグを編集",
        "icon": "$(edit)"
      },
      {
        "command": "dialogoi.addReference",
        "title": "参照を追加",
        "icon": "$(link)"
      },
      {
        "command": "dialogoi.removeReference",
        "title": "参照を削除",
        "icon": "$(unlink)"
      },
      {
        "command": "dialogoi.editReferences",
        "title": "参照を編集",
        "icon": "$(edit)"
      },
      {
        "command": "dialogoi.editCharacterImportance",
        "title": "キャラクター重要度を編集",
        "icon": "$(star)"
      },
      {
        "command": "dialogoi.toggleMultipleCharacters",
        "title": "複数キャラクターフラグを切り替え",
        "icon": "$(people)"
      },
      {
        "command": "dialogoi.editForeshadowing",
        "title": "伏線を編集",
        "icon": "$(eye)"
      },
      {
        "command": "dialogoi.deleteDirectory",
        "title": "ディレクトリを削除",
        "icon": "$(trash)"
      },
      {
        "command": "dialogoi.removeForeshadowing",
        "title": "伏線を削除",
        "icon": "$(eye-closed)"
      },
      {
        "command": "dialogoi.filterByTag",
        "title": "タグでフィルター",
        "icon": "$(filter)"
      },
      {
        "command": "dialogoi.clearFilter",
        "title": "フィルター解除",
        "icon": "$(clear-all)"
      },
      {
        "command": "dialogoi.filterByReference",
        "title": "参照でフィルター",
        "icon": "$(references)"
      },
      {
        "command": "dialogoi.filterByFileType",
        "title": "種別でフィルター",
        "icon": "$(filter)"
      },
      {
        "command": "dialogoi.showFilterStatus",
        "title": "フィルター状態表示",
        "icon": "$(info)"
      },
      {
        "command": "dialogoi.manageExcludeSettings",
        "title": "検索除外設定を管理",
        "icon": "$(gear)"
      },
      {
        "command": "dialogoi.startNewNovel",
        "title": "新しい小説を開始",
        "icon": "$(add)"
      },
      {
        "command": "dialogoi.editProjectSettings",
        "title": "Dialogoi: 小説プロジェクトの設定",
        "icon": "$(gear)",
        "category": "Dialogoi"
      },
      {
        "command": "dialogoi.convertFileType",
        "title": "ファイル種別を変更",
        "icon": "$(symbol-property)"
      },
      {
        "command": "dialogoi.addCommentFromSelection",
        "title": "ここにコメントを追加",
        "icon": "$(comment)",
        "category": "Dialogoi"
      },
      {
        "command": "dialogoi.addFileToManagement",
        "title": "Dialogoi管理対象に追加",
        "icon": "$(add)"
      },
      {
        "command": "dialogoi.createMissingFile",
        "title": "ファイルを作成",
        "icon": "$(new-file)"
      },
      {
        "command": "dialogoi.removeMissingFile",
        "title": "管理対象から削除",
        "icon": "$(trash)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "dialogoi.refreshExplorer",
          "when": "view == dialogoi-explorer",
          "group": "navigation@0"
        },
        {
          "command": "dialogoi.createFile",
          "when": "view == dialogoi-explorer",
          "group": "navigation@1"
        },
        {
          "command": "dialogoi.filterByTag",
          "when": "view == dialogoi-explorer",
          "group": "navigation@2"
        },
        {
          "command": "dialogoi.clearFilter",
          "when": "view == dialogoi-explorer",
          "group": "navigation@3"
        },
        {
          "command": "dialogoi.editProjectSettings",
          "when": "view == dialogoi-explorer && dialogoi:hasNovelProject",
          "group": "navigation@4"
        }
      ],
      "view/item/context": [
        {
          "command": "dialogoi.createFileInDirectory",
          "when": "view == dialogoi-explorer && viewItem =~ /^dialogoi-file/",
          "group": "1_create"
        },
        {
          "command": "dialogoi.renameFile",
          "when": "view == dialogoi-explorer && viewItem =~ /^dialogoi-file/",
          "group": "2_edit"
        },
        {
          "command": "dialogoi.deleteFile",
          "when": "view == dialogoi-explorer && viewItem =~ /^dialogoi-file/",
          "group": "3_delete"
        },
        {
          "command": "dialogoi.addTag",
          "when": "view == dialogoi-explorer && viewItem =~ /^dialogoi-file/",
          "group": "4_tags"
        },
        {
          "command": "dialogoi.removeTag",
          "when": "view == dialogoi-explorer && viewItem =~ /^dialogoi-file/",
          "group": "4_tags"
        },
        {
          "command": "dialogoi.editTags",
          "when": "view == dialogoi-explorer && viewItem =~ /^dialogoi-file/",
          "group": "4_tags"
        },
        {
          "command": "dialogoi.addReference",
          "when": "view == dialogoi-explorer && viewItem =~ /^dialogoi-file/",
          "group": "5_references"
        },
        {
          "command": "dialogoi.removeReference",
          "when": "view == dialogoi-explorer && viewItem =~ /^dialogoi-file/",
          "group": "5_references"
        },
        {
          "command": "dialogoi.editReferences",
          "when": "view == dialogoi-explorer && viewItem =~ /^dialogoi-file/",
          "group": "5_references"
        },
        {
          "command": "dialogoi.convertFileType",
          "when": "view == dialogoi-explorer && (viewItem =~ /^dialogoi-file-(content|setting)($|-)/ && viewItem != dialogoi-file-missing && viewItem != dialogoi-file-untracked)",
          "group": "6_filetype"
        },
        {
          "command": "dialogoi.editCharacterImportance",
          "when": "view == dialogoi-explorer && viewItem == dialogoi-file-setting-character",
          "group": "7_character"
        },
        {
          "command": "dialogoi.toggleMultipleCharacters",
          "when": "view == dialogoi-explorer && viewItem == dialogoi-file-setting-character",
          "group": "7_character"
        },
        {
          "command": "dialogoi.editForeshadowing",
          "when": "view == dialogoi-explorer && viewItem == dialogoi-file-setting-foreshadowing",
          "group": "8_foreshadowing"
        },
        {
          "command": "dialogoi.removeForeshadowing",
          "when": "view == dialogoi-explorer && viewItem == dialogoi-file-setting-foreshadowing",
          "group": "8_foreshadowing"
        },
        {
          "command": "dialogoi.deleteDirectory",
          "when": "view == dialogoi-explorer && viewItem == dialogoi-directory",
          "group": "9_directory"
        },
        {
          "command": "dialogoi.addFileToManagement",
          "when": "view == dialogoi-explorer && viewItem == dialogoi-file-untracked",
          "group": "10_management"
        },
        {
          "command": "dialogoi.createMissingFile",
          "when": "view == dialogoi-explorer && viewItem == dialogoi-file-missing",
          "group": "10_management"
        },
        {
          "command": "dialogoi.removeMissingFile",
          "when": "view == dialogoi-explorer && viewItem == dialogoi-file-missing",
          "group": "10_management"
        }
      ],
      "commandPalette": [
        {
          "command": "dialogoi.editProjectSettings",
          "when": "dialogoi:hasNovelProject"
        }
      ],
      "workbench/action/openSettings": [
        {
          "command": "dialogoi.editProjectSettings",
          "when": "dialogoi:hasNovelProject",
          "group": "1_settings"
        }
      ],
      "workbench/action/manage": [
        {
          "command": "dialogoi.editProjectSettings",
          "when": "dialogoi:hasNovelProject",
          "group": "1_settings"
        }
      ],
      "editor/context": [
        {
          "command": "dialogoi.addCommentFromSelection",
          "when": "editorHasSelection && dialogoi:hasNovelProject",
          "group": "dialogoi@1"
        }
      ]
    },
    "keybindings": [
      {
        "command": "dialogoi.renameFile",
        "key": "F2",
        "when": "view == dialogoi-explorer && viewItem"
      },
      {
        "command": "dialogoi.createFile",
        "key": "ctrl+n",
        "mac": "cmd+n",
        "when": "view == dialogoi-explorer"
      }
    ],
    "configuration": {
      "title": "Dialogoi Editor",
      "properties": {}
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "compile:watch": "tsc -watch -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "lint": "eslint \"src/**/*.ts\" \"webview/**/*.{ts,tsx}\" --max-warnings 0",
    "lint:src": "eslint \"src/**/*.ts\" --max-warnings 0",
    "lint:webview": "eslint \"webview/**/*.{ts,tsx}\" --max-warnings 0",
    "test": "NODE_ENV=test jest src",
    "test:react": "NODE_ENV=test jest webview",
    "test:unit": "NODE_ENV=test jest src --testPathIgnorePatterns=integration",
    "test:integration": "NODE_ENV=test jest --testPathPattern=integration",
    "test:all": "NODE_ENV=test jest",
    "test:watch": "NODE_ENV=test jest --watch",
    "test:coverage": "NODE_ENV=test jest --coverage",
    "test:vscode": "echo 'VSCode統合テストは未実装'",
    "typecheck": "tsc --noEmit && tsc --noEmit -p webview/tsconfig.json",
    "typecheck:src": "tsc --noEmit",
    "typecheck:webview": "tsc --noEmit -p webview/tsconfig.json",
    "format": "prettier --write \"src/**/*.ts\" \"webview/**/*.{ts,tsx}\"",
    "format:check": "prettier --check \"src/**/*.ts\" \"webview/**/*.{ts,tsx}\"",
    "format:src": "prettier --write \"src/**/*.ts\"",
    "format:webview": "prettier --write \"webview/**/*.{ts,tsx}\"",
    "webview:build": "npm run webview:build:fileDetails && npm run webview:build:projectSettings && npm run webview:build:comments",
    "webview:build:fileDetails": "esbuild webview/index.tsx --bundle --outfile=out/webviews/fileDetails/script.js --minify --target=es2020 --jsx=automatic --loader:.tsx=tsx",
    "webview:build:projectSettings": "esbuild webview/projectSettings.tsx --bundle --outfile=out/webviews/projectSettings/projectSettings.js --minify --target=es2020 --jsx=automatic --loader:.tsx=tsx",
    "webview:build:comments": "esbuild webview/comments.tsx --bundle --outfile=out/webviews/comments/script.js --minify --target=es2020 --jsx=automatic --loader:.tsx=tsx",
    "webview:watch": "npm run webview:build -- --watch",
    "check-all": "npm run typecheck && npm run lint && npm run format:check && npm run test:all && npm run webview:build",
    "package": "npx vsce package"
  },
  "devDependencies": {
    "@eslint/js": "^9.31.0",
    "@happy-dom/global-registrator": "^18.0.1",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/glob": "^8.1.0",
    "@types/jest": "^30.0.0",
    "@types/js-yaml": "^4.0.9",
    "@types/jsdom": "^21.1.7",
    "@types/node": "^24.0.14",
    "@types/react": "^19.1.0",
    "@types/react-dom": "^19.1.0",
    "@types/vscode": "^1.102.0",
    "@typescript-eslint/eslint-plugin": "^8.37.0",
    "@typescript-eslint/parser": "^8.37.0",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.6.0",
    "esbuild": "^0.25.8",
    "eslint": "^9.31.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "glob": "^11.0.3",
    "globals": "^16.3.0",
    "happy-dom": "^18.0.1",
    "jest": "^30.0.5",
    "jest-environment-jsdom": "^30.0.5",
    "jest-environment-node": "^30.0.5",
    "jsdom": "^26.1.0",
    "prettier": "^3.6.2",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "ts-jest": "^29.4.0",
    "tsx": "^4.20.3",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "js-yaml": "^4.1.0",
    "react-markdown": "^10.1.0",
    "remark-gfm": "^4.0.1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/cedretaber/dialogoi-editor.git"
  },
  "author": "cedretaber",
  "license": "MIT"
}
